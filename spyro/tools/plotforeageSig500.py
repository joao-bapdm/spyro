import matplotlib.pyplot as plt
import copy

def grid_point_to_mesh_point_converter_for_seismicmesh(method, degree , G):
    if method == 'KMV':
        if degree == 1:
            M = G
        if degree == 2:
            M = 0.5*G
        if degree == 3:
            M = 0.2934695559090401*G
        if degree == 4:
            M = 0.21132486540518713*G
        if degree == 5:
            M = 0.20231237605867816*G

    if method == 'CG':
        if degree == 1:
            M = G
        if degree == 2:
            M = 0.5*G
        if degree == 3:
            M = 0.333333333333333*G
        if degree == 4:
            M = 0.25*G
        if degree == 5:
            M = 0.2*G

    if method == 'spectral':
        if degree == 1:
            M = G
        if degree == 2:
            M = 0.5*G
        if degree == 3:
            M = 0.27639320225002106*G
        if degree == 4:
            M = 0.32732683535398854*G
        if degree == 5:
            M = 0.23991190372440996*G

    return M
 
# Homogenous and KMV 
# For p of 1
# 	G		Error 
# 	3		0.7148130612218473 
# 	4		0.6978645766676649 
# 	5		0.604203277125243 
# 	6		0.5234949819112897 
# 	7		0.390608827990436 
# 	8		0.31569892055256277 
# 	9		0.23543101168014674 
# 	10		0.18741111013512093 
# 	11		0.14122835801009398 
# 	12		0.09875221731606681 
# For p of 2
# 	G		Error 
# 	3		0.4243525604959054 
# 	4		0.30146512079545323 
# 	5		0.18978147312192134 
# 	6		0.12622404966689832 
# 	7		0.048623377001533664 
# 	8		0.029683649272879788 
# 	9		0.022694720483420278 
# 	10		0.009934732826990256 
# 	11		0.007377646745746447 
# 	12		0.0039059787087608044 
# For p of 3
# 	G		Error 
# 	3		0.5112545200021913 
# 	4		0.2925783583375339 
# 	5		0.18089619538613508 
# 	6		0.09706378948462177 
# 	7		0.04759244306470834 
# 	8		0.02826552838589699 
# 	9		0.017823199556106867 
# 	10		0.009764901234538203 
# 	11		0.006102555382942487 
# 	12		0.0048675073538751385 
# For p of 4
# 	G		Error 
# 	3		0.5198713083305977 
# 	4		0.2811033245660393 
# 	5		0.19742513242203963 
# 	6		0.09753305084360456 
# 	7		0.0514418241653381 
# 	8		0.02483848006028569 
# 	9		0.009284460913722956 
# 	10		0.004476273001601182 
# 	11		0.0038049883870377183 
# 	12		0.0014770195583993068 
# For p of 5
# 	G		Error 
# 	3		0.42925757927679287 
# 	4		0.20584175166752655 
# 	5		0.0760532290724643 
# 	6		0.020609943219172325 
# 	7		0.009929365693541123 
# 	8		0.0031524087024476714 
# 	9		0.0019027365094918583 
# 	10		0.001081511931629694 
# 	11		0.0010876658731650683 
# 	12		0.0005494142230775762 
 
p = [1, 2, 3, 4, 5]
gpwl = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
err = [
    [0.7148130612218473, 0.6978645766676649 , 0.604203277125243 , 0.5234949819112897 , 0.390608827990436 , 0.31569892055256277 , 0.23543101168014674  , 0.18741111013512093  , 0.14122835801009398  , 0.09875221731606681 ],
    [0.4243525604959054 , 0.30146512079545323 , 0.18978147312192134 , 0.12622404966689832 , 0.048623377001533664 , 0.029683649272879788 , 0.022694720483420278  , 0.009934732826990256  , 0.007377646745746447  , 0.0039059787087608044 ],
    [0.5112545200021913, 0.2925783583375339, 0.18089619538613508, 0.09706378948462177, 0.04759244306470834, 0.02826552838589699, 0.017823199556106867 , 0.009764901234538203 , 0.006102555382942487 , 0.0048675073538751385 ],
    [0.5198713083305977, 0.2811033245660393, 0.19742513242203963, 0.09753305084360456, 0.0514418241653381, 0.02483848006028569, 0.009284460913722956 , 0.004476273001601182 , 0.0038049883870377183 , 0.0014770195583993068  ],
    [0.42925757927679287, 0.20584175166752655, 0.0760532290724643, 0.020609943219172325, 0.009929365693541123, 0.0031524087024476714, 0.0019027365094918583 , 0.001081511931629694 , 0.0010876658731650683 , 0.0005494142230775762  ],
]
for p, e in enumerate(err):
    plt.plot(gpwl, e, "o-", label="P=" + str(p + 1))

plt.plot(gpwl,[0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01 ], 'k--')
plt.xlabel("grid-points-per-wavelength")
plt.ylabel("error (pressure)")
plt.title("Error with varying grid point density sigma = 500")
plt.legend(
    loc="upper center", bbox_to_anchor=(0.5, -0.05), fancybox=True, shadow=True, ncol=5
)
plt.yscale("log")
plt.show()

cont = 0
p = [1, 2, 3, 4, 5]
for degree in p:
    m = copy.deepcopy(gpwl)
    for ite in range(len(gpwl)):
        m[ite]= grid_point_to_mesh_point_converter_for_seismicmesh('KMV', degree ,gpwl[ite])

    plt.plot(m, err[cont], "o-", label="P=" + str(degree))
    cont +=1

plt.plot([1.0,12.0],[0.01, 0.01], 'k--')

plt.xlabel("elements-per-wavelength")
plt.ylabel("error (pressure)")
plt.title("Error with varying element density")
plt.legend(
    loc="upper center", bbox_to_anchor=(0.5, -0.05), fancybox=True, shadow=True, ncol=5
)
plt.yscale("log")
plt.show()

